import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;
import java.util.regex.*;

class ReservationPage extends JFrame implements ActionListener {
    private JComboBox<String> roomTypeBox;
    private JSpinner dateSpinner;
    private JTextField nightsField;
    private JTextField idField; // Add ID field
    private JTextField nameField; // Add name field
    private JTextField emailField; // Add email field
    private JTextField phoneField; // Add phone number field
    private JButton bookButton;
    private JLabel priceLabel;

    public ReservationPage() {
        setTitle("Reservation");
        setSize(300, 300); // Increased height for additional fields
        setLayout(new GridLayout(0, 2));
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Generate ID automatically
        String generatedID = generateRandomID(); // Generate a random numeric ID
        add(new JLabel("ID:")); // Label for ID field
        idField = new JTextField(generatedID); // ID field
        idField.setEditable(false); // Make ID field non-editable
        add(idField);

        add(new JLabel("Full Name:")); // Label for full name field
        nameField = new JTextField(); // Full name field
        add(nameField);

        add(new JLabel("Email:")); // Label for email field
        emailField = new JTextField(); // Email field
        add(emailField);

        add(new JLabel("Phone Number:")); // Label for phone number field
        phoneField = new JTextField(); // Phone number field
        add(phoneField);

        add(new JLabel("Select Date:"));
        dateSpinner = new JSpinner(new SpinnerDateModel());
        add(dateSpinner);

        add(new JLabel("Room Type:"));
        roomTypeBox = new JComboBox<>(new String[]{"Studio", "2 Bedroom", "3 Bedroom"});
        add(roomTypeBox);

        add(new JLabel("Nights:"));
        nightsField = new JTextField();
        add(nightsField);

        bookButton = new JButton("Book");
        bookButton.addActionListener(this);
        add(bookButton);

        priceLabel = new JLabel("Total Price: ");
        add(priceLabel);

        setVisible(true);
    }

    private String generateRandomID() {
        Random random = new Random();
        int id = 10000 + random.nextInt(90000); // Generate a random 5-digit number
        return String.valueOf(id);
    }

    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&-]+(?:\\.[a-zA-Z0-9_+&-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        Pattern pattern = Pattern.compile(emailRegex);
        return pattern.matcher(email).matches();
    }

    private boolean isValidPhoneNumber(String phoneNumber) {
        String phoneRegex = "^\\d{10}$"; // assuming phone number is 10 digits
        Pattern pattern = Pattern.compile(phoneRegex);
        return pattern.matcher(phoneNumber).matches();
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == bookButton) {
            int nights = Integer.parseInt(nightsField.getText());
            int pricePerNight = roomTypeBox.getSelectedIndex() == 0 ? 140 :
                                roomTypeBox.getSelectedIndex() == 1 ? 228 : 300;
            int totalPrice = nights * pricePerNight;

            // Validate email and phone number
            String email = emailField.getText();
            String phoneNumber = phoneField.getText();
            if (!isValidEmail(email)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid email address.", "Invalid Email", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!isValidPhoneNumber(phoneNumber)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid phone number (10 digits).", "Invalid Phone Number", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Gather user information
            String userInfo = "ID: " + idField.getText() + "\n"
                            + "Name: " + nameField.getText() + "\n"
                            + "Email: " + emailField.getText() + "\n"
                            + "Phone Number: " + phoneField.getText() + "\n"
                            + "Room Type: " + roomTypeBox.getSelectedItem() + "\n"
                            + "Nights: " + nights + "\n"
                            + "Total Price: RM" + totalPrice;

            // Show confirmation dialog
            int option = JOptionPane.showConfirmDialog(this, userInfo, "Confirmation", JOptionPane.OK_CANCEL_OPTION);
            
            // If user confirms, proceed with booking
            if (option == JOptionPane.OK_OPTION) {
                priceLabel.setText("Total Price: RM" + totalPrice);
                new ReceiptPage((String)roomTypeBox.getSelectedItem(), pricePerNight, nights, totalPrice, idField.getText(), nameField.getText()).setVisible(true);
                this.setVisible(false);
            }
        }
    }
}
